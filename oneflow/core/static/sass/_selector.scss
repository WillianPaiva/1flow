$folder-border-width-default: 2px;

@mixin selector-factory($application-width, $folder-border-width: $folder-border-width-default,
                        $selector-margin: 20px, $selector-columns: 2) {

    $folder-level-0-children: $application-width - $folder-border-width;
    $folder-level-0-subscription-width: $folder-level-0-children / $selector-columns - $selector-margin;
    $folder-level-1-width: $folder-level-0-children / $selector-columns - $folder-border-width - $selector-margin;

    #selector #application,
    #add-subscription #application {

        @if $application-width < 768 {
            margin: 1em auto;

        } @else {
            margin: 2em auto;
        }

        width: $application-width;
    }

    @if $selector-columns == 1 {

        .folder .folder-wrapper {
            width: $folder-level-1-width - $selector-margin - $folder-border-width;
            margin-left: 0;
        }

        .folder .folder .folder-wrapper {
            width: $folder-level-1-width - $selector-margin - $folder-border-width * 2;
            margin-left: $selector-margin;
        }

        .folder .folder .folder .folder-wrapper {
            width: $folder-level-1-width - $selector-margin - $folder-border-width * 3;
            margin-left: $selector-margin;
            margin-left: 0;
        }

        .folder .folder .folder .folder .folder-wrapper {
            width: $folder-level-1-width - $selector-margin - $folder-border-width * 4;
            margin-left: $selector-margin;
        }

    } @else {

        .folder .folder-wrapper {
            width: $folder-level-1-width;
            margin-left: $selector-margin;
        }

        .folder .folder .folder-wrapper {
            width: $folder-level-1-width - $selector-margin - $folder-border-width;
            margin-left: 0;
        }

        .folder .folder .folder .folder-wrapper {
            width: $folder-level-1-width - $selector-margin - $folder-border-width * $selector-columns;
        }

        .folder .folder .folder .folder .folder-wrapper {
            width: $folder-level-1-width - $selector-margin * $selector-columns - $folder-border-width * ($selector-columns + 1);
            margin-left: $selector-margin;
        }
    }

    .subscription {
        width: $folder-level-0-subscription-width;
        margin-left: $selector-margin;
    }

    .folder .folder .subscription {
        width: 100%;
        margin-left: 0;
    }

    .folder-wrapper {
        .name-wrapper .name:before {
            border-top-width: $folder-border-width;
        }
    }
}

@mixin folder-borders($level, $top, $side, $fix-even: 0, $fix-odd: 0) {
    // NOTE: as of 20131011, this mixin is not used anymore, but I keep
    // it here for memories because it shows a lot of compass usage.

    .folder-wrapper.level-#{$level} {
        .name-wrapper.level-#{$level} .name:before {
            top: -$top + 0px;

            @if $level % 2 == 0 {
                left: -$side + 0px;
                right: 2px * $side;

            } @else {
                right: -$side + 0px;
                left: 2px * $side;
            }
        }

        // With an odd border pixel size (1px, 3px, 5px, etc), the
        // folder width value is rounded to the inferior pixel and we
        // loose ONE pixel on the total screen width. It makes some
        // top-borders offset. We have to compensate for this here.

        @if $level % 2 == 0 and $fix-even != 0 {

            &:nth-child(even) {

                .name-wrapper.level-1 .name:before {
                    top: -$top + 0px;
                    right: -$side + $fix-odd + 0px;
                    left: 2px * ($side + $fix-odd);
                }
            }
        }

        @if $level % 2 != 0 and $fix-odd != 0 {

            &:nth-child(odd) {

                .name-wrapper.level-1 .name:before {
                    top: -$top + 0px;
                    right: -$side + $fix-odd + 0px;
                    left: 2px * ($side + $fix-odd);
                }
            }
        }
    }
}


// ———————————————————————————————————————————————————————————— Source selector


#selector {
    a.manage {
        text-decoration: none;
        background-color: transparent;
        color: grey;
        opacity: 0.5;

        &:hover,
        &:active {
            opacity: 1;
        }

        &:visited {
            opacity: 0.5;
        }
    }

    #reading-lists,
    #watching-lists {
        font-size: 125%;

        ul {
            margin-bottom: 20px;

            li {
                list-style-type: none;
                padding: 5px;

                a {
                    color: $subscription-link-color;
                }
            }
        }
    }
}

.folder .folder-wrapper {
    // second level (= level-1) of folder
    // takes half the size of the parent.
    float: left;

    // The top part of this margin must be in sync (or
    // not, if explicitely wanted) with @@SYNC-MT-FW@@
    margin-top: 2em;
}

.folder {
    // Just for memories, with a div.clearfix every two folders, we use
    // &:nth-child(3n+1) to get the next just after the div.clearfix.

    .name-wrapper {
        font-size: 325%;
        font-family: Georgia, Serif;
        color: rgba(44, 55, 66, $subscription-opacity-default);
        padding: 0 0.5em 0.5em;

        &:hover {
            .css-hover-muted {
                opacity: 1;
                height: auto;
            }
        }
    }

    .no-subscription {
        color: $subscription-link-color;
        opacity: $subscription-opacity-default;
        font-size: 150%;
        margin-bottom: 50px;

        // Replicate padding-{left,right} in
        // .name-wrapper, minus negative margin…
        padding-left: 0.75em;
        padding-right: 0.75em;
    }

    .folder .name-wrapper {
        font-size: 250%;
    }

    .folder .folder .name-wrapper {
        font-size: 200%;
    }

    .folder .folder .folder .name-wrapper {
        font-size: 150%;
    }
}

.folder-wrapper {
    // This margin-top must be in sync (or not,
    // if explicitely wanted) with @@SYNC-MT-FW@@
    margin-top: 4em;

    .name-wrapper {
        margin-top: 0.5em;

        .name {
            position: relative;

            &:before {
                position: absolute;
                content: '';
                border-top-color: inherit;
                border-top-style: solid;
            }
        }
    }
}

.folder-border-top {
    width: 33%;
    height: $folder-border-width-default;

    // DUNNO: why "-$folder-border-width-default" doesn't work.
    margin: 0 0 -2px 0;
}


// ——————————————————————————————————————————— Order and splitting matter START
// eg, we can't group *.level-* like we did before,
// due to CSS-nature-related inheriting consequences.

.folder-wrapper.level-0 {
    border-left-style: solid;
    border-left-width: $folder-border-width-default;

    .folder-border-top {
        float: left;
    }

    .name-wrapper.level-0 {
        text-align: left;
    }

    &:hover .name-wrapper.level-0 {
        color: rgba(44, 55, 66, 1);
    }
}
.folder-wrapper.level-1 {
    border-right-style: solid;
    border-right-width: $folder-border-width-default;

    .folder-border-top {
        float: right;
    }

    .name-wrapper.level-1 {
        text-align: right;
    }

    &:hover .name-wrapper.level-1 {
        color: rgba(44, 55, 66, 1);
    }
}
.folder-wrapper.level-2 {
    border-left-style: solid;
    border-left-width: $folder-border-width-default;

    .folder-border-top {
        float: left;
    }

    .name-wrapper.level-2 {
        text-align: left;
    }

    &:hover .name-wrapper.level-2 {
        color: rgba(44, 55, 66, 1);
    }
}
.folder-wrapper.level-3 {
    border-right-style: solid;
    border-right-width: $folder-border-width-default;

    .folder-border-top {
        float: right;
    }

    .name-wrapper.level-3 {
        text-align: right;
    }

    &:hover .name-wrapper.level-3 {
        color: rgba(44, 55, 66, 1);
    }
}
.folder-wrapper.level-4 {
    border-left-style: solid;
    border-left-width: $folder-border-width-default;

    .folder-border-top {
        float: left;
    }

    .name-wrapper.level-4 {
        text-align: left;
    }

    &:hover .name-wrapper.level-4 {
        color: rgba(44, 55, 66, 1);
    }
}

// ————————————————————————————————————————————— Order and splitting matter END

#subscriptions,
#closed-subscriptions {

    .global-links {
        font-size: 80%;

        span {
            padding-left: 10px;

            span {
                padding-left: 0;
            }
        }
    }
}

@mixin thumbnail-img-styles($size) {

    a:hover {
        text-decoration: none;
    }

    img, .generic-img {
        max-width: $size;
        max-height: $size;
        @include border-radius(3px);
    }

    .generic-img {
        width: $size;
        height: $size;
        line-height: $size;
        font-size: $size / 5 * 3;
        text-align: center;
        opacity: 0.75;
    }
}

.subscription {
    position: relative;
    float: left;

    a {
        color: $subscription-link-color;
        text-decoration: none;

        &:hover {
            color: $subscription-link-hover;
        }
    }

    min-height: $subscription-image-size;

    padding-top: $subscription-padding;
    padding-bottom: $subscription-padding;

    .thumbnail {
        position: absolute;
        top: $subscription-padding;
        left: $subscription-padding;

        border: 0;
        padding: 0;
        margin: 0;

        opacity: $subscription-opacity-default;

        // blurring icon:
        //filter: url("/static/img/filters.svg#blur2px");
        //@include filter(blur(2px));

        @include black-and-white(100%);

        @include thumbnail-img-styles($subscription-image-size);

        img, .generic-img {
            max-width: $subscription-image-size;
            max-height: $subscription-image-size;
            @include border-radius(3px);
        }

        .generic-img {
            width: $subscription-image-size;
            height: $subscription-image-size;
            line-height: $subscription-image-size;
            font-size: 150%;
            text-align: center;
            opacity: 0.75;
        }
    }

    .name {
        position: absolute;
        top: $subscription-padding;
        left: $subscription-image-size + $subscription-padding * 2;
        right: $subscription-padding;

        font-size: 140%;
        line-height: $subscription-name-height;
        max-height: $subscription-name-height;

        overflow: hidden;
        text-overflow: ellipsis;

        opacity: $subscription-opacity-default;

        a {
            padding: 0 6px;
        }
    }

    .links {
        position: absolute;
        top: $subscription-name-height + $subscription-padding;
        left: $subscription-image-size + $subscription-padding * 2;

        a {
            padding: 0 4px;
        }

        .count.small {
            font-size: 80%;
        }
    }

    .last-updated {
        position: absolute;
        bottom: $subscription-padding - $baseline-difference;
        right: $subscription-padding;
    }

    &:hover {
        background: #fff;
        @include border-radius(2px);

        .css-hover-muted {
            opacity: 1;
            height: auto;
        }

        .thumbnail {
            opacity: 1;

            // unblurring icon:
            //@include filter(none);

            @include black-and-white(none);
        }

        .name {
            opacity: 1;
        }
    }

    .tags {
        position: absolute;
        bottom: 20px;
        left: 10px;
    }
}

.has-unread {

    .thumbnail {
        opacity: 1;
        @include filter(none);
    }

    .name {
        opacity: 1;
        font-weight: 700;

        .unread-count {
            font-weight: 400;
            opacity: 0.33;
        }
    }
}

.is_closed {
    .name:not(.css-hover-muted) {
        text-decoration: line-through;

        &:hover {
            text-decoration: none;
        }
    }
}

#manage-folder.modal,
#manage-subscription.modal {

    form {
        margin-bottom: 0;
    }

    .select2-container:not(.select2-container-multi) {
        padding-top: 6px;
    }

    .sub-modal h4 {
        margin-top: 1em;
        margin-bottom: 1em;
    }

    label,
    input,
    select {
        font-size: 150%;
    }

    input {
        // cancel Bootstrap's padding, but align
        // label and input content from the top.
        padding: 5px 0 0;

        // Make the field "Medium"-like
        border: none;
        border-radius: 0;
        box-shadow: none;

        // But see it when not focused
        border-bottom: 1px dotted #ddd;

        &:focus {
            // when editing, make things clear.
            border: none;
        }
    }

    label,
    input {
        // `select` is already overriden in globals.
        height: 30px;
        line-height: 30px;
    }

    .thumbnail {
        float: left;

        border: 0;
        padding: 0;
        margin: 0;

        @include thumbnail-img-styles($subscription-image-size * 3);
    }

    label.note {
        padding-top: 0px;
        vertical-align: top;
    }

    .manage-admin-actions {
        padding: 10px 15px 0;
        margin-left: -15px;
        margin-right: -15px;
        border-top: 1px solid #bbb;
        text-align: center;
    }
}

#add-subscription #application .form-wrapper {
    margin-top: 5em;
    margin-bottom: 5em;
    padding: 0 25%;

    h1 {
        margin-bottom: 2em;
    }

    .form-actions {
        // override Bootstrap's form-horizontal value.
        padding-left: 20px;
        margin-top: 40px;
    }

    .control-label:last-child {
        padding-top: 10px;
    }

    .help-block:last-child {
        margin-top: 2em;
        text-align: center;
    }

    .select2-container {
        width: 85%;
    }
    input[type="text"]:last-child {
        width: 80%;
    }

    .or-choice {
        text-align: center;
        margin: 1em 40%;
        width: 20%;
        position: relative;
        font-size: 250%;

        &:before,
        &:after {
            display: block;
            content: ' ';
            position: absolute;
            top: 50%;
            width: 200%;
            height: 1px;
            border-top: 1px solid #ccc;
        }
        &:before {
            left: -200%;
        }
        &:after {
            //left: 20px;
            right: -200%;

        }
    }
}
